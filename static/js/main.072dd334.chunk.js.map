{"version":3,"sources":["images/cart.png","images/voltar.png","images/shoppingcart.jpg","images/trybee.png","components/Header.jsx","services/api.js","pages/Categories.jsx","components/Product.jsx","components/ProductList.jsx","components/Footer.jsx","pages/Home.jsx","pages/ShoppingCart.jsx","components/RatingsPrevList.jsx","components/ProductRating.jsx","pages/Details.jsx","components/Pages.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","this","props","handleChange","handleClick","className","to","src","ImageBack","alt","data-testid","type","id","name","placeholder","onChange","onClick","Image","React","Component","getCategories","a","fetch","fetchAPI","json","categories","HTMLFormControlsCollection","log","getProductsFromCategoryAndQuery","categoryId","query","categoryAndQuery","console","getProductDetails","product","JSON","parse","localStorage","getItem","setItem","stringify","Categories","state","listCategories","getListCategories","bind","setState","map","key","htmlFor","Product","title","thumbnail","price","addToCart","ProductList","products","results","Footer","Gif","Home","listProduct","loading","ShoppingCart","cartItems","length","item","index","PrevList","prevRatings","rating","email","review","ProductRating","target","value","handleSubmit","newRating","emojis","currRating","Details","match","params","details","warranty","sold_quantity","Pages","category","search","Api","resultSearch","exact","path","render","App","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.072dd334.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cart.7fb2da28.png\";","module.exports = __webpack_public_path__ + \"static/media/voltar.1907807b.png\";","module.exports = __webpack_public_path__ + \"static/media/shoppingcart.be5f0319.jpg\";","module.exports = __webpack_public_path__ + \"static/media/trybee.caacdb34.png\";","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport './Header.css';\n\nimport Image from '../images/cart.png';\nimport ImageBack from '../images/voltar.png';\n\nclass Header extends React.Component {\n  render() {\n    const {\n      handleChange,\n      handleClick,\n    } = this.props;\n    return (\n      <header className=\"header\">\n\n        <Link to=\"/project-frontend-store\" className=\"linkvoltar\">\n          <img className=\"voltar\" src={ ImageBack } alt=\"voltar\" />\n        </Link>\n\n        <div className=\"center\">\n\n          <h1 className=\"titulo\">Front Online Store</h1>\n          <div className=\"inputSearch\">\n            <input\n              className=\"input\"\n              data-testid=\"query-input\"\n              type=\"text\"\n              id=\"input-search\"\n              name=\"search\"\n              placeholder=\"Digite algum termo de pesquisa\"\n              onChange={ handleChange }\n            />\n            <button\n              className=\"button\"\n              type=\"button\"\n              data-testid=\"query-button\"\n              onClick={ handleClick }\n            >\n              Buscar\n            </button>\n          </div>\n          <h2 data-testid=\"home-initial-message\">\n            Digite algum termo de pesquisa ou escolha uma categoria.\n          </h2>\n        </div>\n\n        <Link className=\"linkCart\" to=\"/project-frontend-store/cart\" data-testid=\"shopping-cart-button\">\n          <img className=\"image-cart\" src={ Image } alt=\"carrinho de compras\" />\n        </Link>\n\n      </header>\n    );\n  }\n}\n\nHeader.propTypes = {\n  handleChange: PropTypes.func,\n  handleClick: PropTypes.func,\n}.isRequired;\n\nexport default Header;\n","if (!JSON.parse(localStorage.getItem('ratings'))) {\n  localStorage.setItem('ratings', JSON.stringify([]));\n}\n\nexport async function getCategories() {\n  try {\n    const fetchAPI = await fetch('https://api.mercadolibre.com/sites/MLB/categories');\n    const categories = await fetchAPI.json();\n    return categories;\n  } catch (error) {\n    HTMLFormControlsCollection.log(error);\n  }\n}\n\nexport async function getProductsFromCategoryAndQuery(categoryId, query) {\n  try {\n    const fetchAPI = await fetch(`https://api.mercadolibre.com/sites/MLB/search?category=${categoryId}&q=${query}`);\n    const categoryAndQuery = await fetchAPI.json();\n    return categoryAndQuery;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getProductDetails(id) {\n  try {\n    const fetchAPI = await fetch(`https://api.mercadolibre.com/items/${id}`);\n    const product = await fetchAPI.json();\n    return product;\n  } catch (error) {\n    console.log(error);\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getCategories } from '../services/api';\nimport './Categories.css';\n\nclass Categories extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      listCategories: [],\n    };\n\n    this.getListCategories = this.getListCategories.bind(this);\n  }\n\n  componentDidMount() {\n    this.getListCategories();\n  }\n\n  async getListCategories() {\n    this.setState({\n      listCategories: [...await getCategories()],\n    });\n  }\n\n  render() {\n    const { listCategories } = this.state;\n    const { handleChange } = this.props;\n    return (\n      <div className=\"categories\">\n\n        <h2 className=\"titleCategories\">\n          Categorias\n        </h2>\n\n        <div className=\"divLabels\">\n          {listCategories.map((categories) => (\n            <label\n              className=\"labelCategories\"\n              key={ categories.id }\n              htmlFor={ categories.id }\n            >\n              <input\n                className=\"inputCategories\"\n                data-testid=\"category\"\n                type=\"radio\"\n                name=\"category\"\n                id={ categories.id }\n                onClick={ handleChange }\n              />\n\n              { categories.name }\n\n            </label>\n\n          ))}\n        </div>\n\n      </div>\n    );\n  }\n}\n\nCategories.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n};\n\nexport default Categories;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Image from '../images/shoppingcart.jpg';\n\nclass Product extends React.Component {\n  render() {\n    const { product: { title, thumbnail, price, id } } = this.props; // vem das propriedades de product passada pelo .map do ProductList.\n    const { addToCart } = this.props;\n    return (\n      <div className=\"product\" data-testid=\"product\">\n        <img src={ thumbnail } alt={ title } className=\"productImg\" />\n        <h3>{ title }</h3>\n        <p>{ price }</p>\n        <div className=\"moreAdd\">\n          <Link\n            data-testid=\"product-detail-link\"\n            to={ `/project-frontend-store/${id}` }\n          >\n            Saiba mais.\n          </Link>\n          <button\n            type=\"submit\"\n            data-testid=\"product-add-to-cart\"\n            onClick={ () => addToCart(thumbnail, title, price) }\n          >\n            <img src={ Image } alt=\"Adicionar ao Carrinho\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nProduct.propTypes = {\n  product: PropTypes.shape({\n    title: PropTypes.string,\n    thumbnail: PropTypes.string,\n    price: PropTypes.number,\n    id: PropTypes.string,\n  }).isRequired,\n  addToCart: PropTypes.func.isRequired,\n};\n\nexport default Product;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Product from './Product';\nimport './ProductList.css';\n\nclass ProductList extends Component {\n  render() {\n    const { products, addToCart } = this.props; // vem das props passadas na página home.\n    const { results } = products;\n    return (\n      <div className=\"productList\">\n        {\n          results.map((product) => (<Product\n            key={ product.id }\n            product={ product }\n            addToCart={ addToCart }\n          />))\n        }\n      </div> // cria um novo array a partir dos products e passa como valor ao component Product.\n    );\n  }\n}\nProductList.propTypes = {\n  products: PropTypes.shape({\n    results: PropTypes.arrayOf(PropTypes.shape({\n      price: PropTypes.number,\n      thumbnail: PropTypes.string,\n      title: PropTypes.string,\n    })),\n  }).isRequired,\n  addToCart: PropTypes.func.isRequired,\n};\nexport default ProductList;\n","import React from 'react';\n\nimport Gif from '../images/trybee.png';\n\nimport './Footer.css';\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer className=\"footer\">\n        <div className=\"titleName\">\n          <p className=\"title\">\n            <strong>\n              Project Online Store\n            </strong>\n          </p>\n          <p className=\"names\">\n            Aline Bury, Alline Franciely, Charles Chavier,\n            Matheus Alves, Natã Abrahão ©\n          </p>\n        </div>\n        <img className=\"trybe\" src={ Gif } alt=\"trybe\" />\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Home.css';\n\nimport Header from '../components/Header';\nimport Categories from './Categories';\nimport ProductList from '../components/ProductList';\nimport Footer from '../components/Footer';\n\nclass Home extends React.Component {\n  render() {\n    const {\n      listProduct,\n      loading,\n      handleChange,\n      handleClick,\n      addToCart,\n    } = this.props;\n    return (\n      <div>\n        <Header handleClick={ handleClick } handleChange={ handleChange } />\n\n        <div className=\"mainPage\">\n          <Categories handleChange={ handleChange } />\n          { loading\n            ? <p> </p>\n            : <ProductList products={ listProduct } addToCart={ addToCart } />}\n        </div>\n\n        <Footer />\n\n      </div> // passa o valor do listProduct ao products e joga no ProductList\n    );\n  }\n}\n\nHome.propTypes = {\n  listProduct: PropTypes.shape({\n    results: PropTypes.arrayOf(PropTypes.shape({\n      price: PropTypes.number,\n      thumbnail: PropTypes.string,\n      title: PropTypes.string,\n    })),\n  }).isRequired,\n  loading: PropTypes.bool.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  handleClick: PropTypes.func.isRequired,\n  addToCart: PropTypes.func.isRequired,\n};\n\nexport default Home;\n","import React from 'react';\n// import { Link } from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\n\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\n\nclass ShoppingCart extends React.Component {\n  render() {\n    const { cartItems } = this.props;\n\n    return (\n      <div>\n        <Header />\n        { cartItems.length === 0\n          ? <h3 data-testid=\"shopping-cart-empty-message\">Seu carrinho está vazio</h3>\n          : (\n            cartItems.map((item, index) => (\n              <div key={ index } data-testid=\"shopping-cart-product-name\">\n                <h3>{ item.title }</h3>\n                <img src={ item.thumbnail } alt={ item.title } />\n                <p>{ item.price }</p>\n                <p data-testid=\"shopping-cart-product-quantity\">1</p>\n              </div>\n            ))\n          ) }\n        <Footer />\n      </div>\n    );\n  }\n}\n\nShoppingCart.propTypes = {\n  cartItems: PropTypes.arrayOf(PropTypes.shape({\n    thumbnail: PropTypes.string,\n    title: PropTypes.string,\n    price: PropTypes.number,\n  })).isRequired,\n};\n\nexport default ShoppingCart;\n","import React, { Component } from 'react';\n\nclass PrevList extends Component {\n  render() {\n    const prevRatings = JSON.parse(localStorage.getItem('ratings'));\n\n    return (\n      <div>\n        <h1>Todas as avaliações:</h1>\n        {prevRatings.map((rating, index) => (\n          <div\n            className=\"review-card\"\n            key={ index }\n          >\n            <h2>{rating.email}</h2>\n            <h2>{rating.rating}</h2>\n            <p>{rating.review}</p>\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default PrevList;\n","import React, { Component } from 'react';\nimport PrevList from './RatingsPrevList';\n\nclass ProductRating extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      email: '',\n      rating: '',\n      review: '',\n      loading: false,\n    };\n  }\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleSubmit = async () => {\n    const { email, rating, review } = this.state;\n    const newRating = {\n      email,\n      rating,\n      review,\n    };\n    if (rating) {\n      this.setState({\n        loading: true,\n      }, () => {\n        const prevRatings = JSON.parse(localStorage.getItem('ratings'));\n        localStorage.setItem('ratings', JSON.stringify([newRating, ...prevRatings]));\n        this.setState({\n          loading: false,\n        });\n      });\n    }\n  }\n\n  render() {\n    const ratings = ['1', '2', '3', '4', '5'];\n    const emojis = ['😢', '😕', '😐', '🙂', '😍'];\n    const { loading, rating } = this.state;\n    return (\n      <div className=\"flex\">\n        <section className=\"new-review\">\n          <h1>Avalie:</h1>\n          <form>\n\n            <label htmlFor=\"product-detail-email\">\n              <p>Email:</p>\n              <input\n                onChange={ this.handleChange }\n                type=\"email\"\n                name=\"email\"\n                data-testid=\"product-detail-email\"\n                id=\"product-detail-email\"\n                className=\"product-detail-email\"\n              />\n            </label>\n\n            <section className=\"emojis\">\n              {ratings.map((currRating, index) => (\n                <div\n                  key={ currRating }\n                >\n                  <input\n                    className=\"radio-button\"\n                    onChange={ this.handleChange }\n                    data-testid={ `${currRating}-rating` }\n                    type=\"radio\"\n                    value={ currRating }\n                    name=\"rating\"\n                    id={ `${currRating}-rating` }\n                  />\n                  <label\n                    htmlFor={ `${currRating}-rating` }\n                  >\n                    <p\n                      className=\"label-radio\"\n                    >\n                      {emojis[index]}\n                    </p>\n                  </label>\n                </div>\n\n              ))}\n            </section>\n\n            <label\n              htmlFor=\"review\"\n            >\n              <p>{`Minha avaliação é ${rating} porque:`}</p>\n              <textarea\n                id=\"review\"\n                name=\"review\"\n                onChange={ this.handleChange }\n                data-testid=\"product-detail-evaluation\"\n              />\n            </label>\n\n            <button\n              className=\"button-details\"\n              type=\"button\"\n              data-testid=\"submit-review-btn\"\n              onClick={ this.handleSubmit }\n            >\n              Enviar\n            </button>\n\n          </form>\n        </section>\n\n        <section className=\"previous-reviews\">\n          {loading\n            ? <p>Loading</p>\n            : <PrevList />}\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default ProductRating;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getProductDetails } from '../services/api';\nimport ProductRating from '../components/ProductRating';\nimport Header from '../components/Header';\n\nimport './Details.css';\n\nimport Footer from '../components/Footer';\n\nclass Details extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      product: [],\n      loading: false,\n    };\n  }\n\n  componentDidMount() {\n    const { match: { params: { id } } } = this.props;\n    this.setState(\n      { loading: true },\n      async () => {\n        const details = await getProductDetails(id);\n        this.setState({\n          product: details,\n          loading: false,\n        });\n      },\n    );\n  }\n\n  render() {\n    const { product, loading } = this.state;\n    const { addToCart } = this.props;\n\n    return (\n      <div>\n        <Header />\n\n        {loading ? 'Carregando...' : (\n          <div className=\"flex\">\n\n            <div className=\"product-image\">\n              <img src={ product.thumbnail } alt={ product.title } />\n            </div>\n\n            <div className=\"product-details\">\n\n              <h1 data-testid=\"product-detail-name\">{product.title}</h1>\n              <p>{`R$ ${product.price}`}</p>\n              <p>{product.warranty}</p>\n              <p>{`${product.sold_quantity} vendidos`}</p>\n\n              <button\n                className=\"button-details\"\n                type=\"button\"\n                onClick={ () => addToCart(product\n                  .thumbnail, product.title, product.price) }\n                data-testid=\"product-detail-add-to-cart\"\n              >\n                Adicionar no carrinho\n              </button>\n\n            </div>\n\n          </div>\n        )}\n\n        <ProductRating />\n\n        <Footer />\n\n      </div>\n    );\n  }\n}\n\nDetails.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }).isRequired,\n  addToCart: PropTypes.func.isRequired,\n};\n\nexport default Details;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Home from '../pages/Home';\nimport ShoppingCart from '../pages/ShoppingCart';\nimport Details from '../pages/Details';\n\nimport * as Api from '../services/api';\n\nclass Pages extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      search: '',\n      listProduct: {},\n      loading: true,\n      category: '',\n      cartItems: [],\n    };\n  }\n\n  handleChange = ({ target }) => {\n    if (target.type === 'radio') {\n      this.setState({\n        category: target.id,\n      }, () => this.handleClick());\n    } else if (target.type === 'text') {\n      this.setState({\n        search: target.value,\n      });\n    }\n  }\n\n  // requisito 6 - função modificada para receber o parametro da categoria também. Também é chamada ao selecionar uma categoria\n  handleClick = async () => {\n    const { search, category } = this.state;\n    const resultSearch = await Api\n      .getProductsFromCategoryAndQuery(category, search);\n    this.setState({\n      listProduct: resultSearch,\n      loading: false,\n    });\n  }\n\n  addToCart = (thumbnail, title, price) => {\n    const { cartItems } = this.state;\n    this.setState({\n      cartItems: [...cartItems, { thumbnail, title, price }],\n    });\n  }\n\n  render() {\n    const {\n      listProduct,\n      loading,\n      cartItems,\n    } = this.state;\n\n    return (\n      <Switch>\n\n        <Route exact path=\"/project-frontend-store\">\n          <Home\n            listProduct={ listProduct }\n            loading={ loading }\n            handleChange={ this.handleChange }\n            handleClick={ this.handleClick }\n            addToCart={ this.addToCart }\n          />\n        </Route>\n\n        <Route exact path=\"/project-frontend-store/cart\">\n          <ShoppingCart\n            cartItems={ cartItems }\n          />\n        </Route>\n\n        <Route\n          exact\n          path=\"/project-frontend-store/:id\"\n          render={ (props) => (\n            <Details { ...props } cartItems={ cartItems } addToCart={ this.addToCart } />\n          ) }\n        />\n\n      </Switch>\n    );\n  }\n}\n\nexport default Pages;\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport Pages from './components/Pages';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Pages />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  const NOT_FOUND = 404;\n  const NOT_FOUND_IN_ARRAY = -1;\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  }).then((response) => {\n    // Ensure service worker exists, and that we really are getting a JS file.\n    const contentType = response.headers.get('content-type');\n    if (response.status === NOT_FOUND\n        || (contentType != null\n          && contentType.indexOf('javascript') === NOT_FOUND_IN_ARRAY)) {\n      // No service worker found. Probably a different app. Reload the page.\n      navigator.serviceWorker.ready.then((registration) => {\n        registration.unregister().then(() => {\n          window.location.reload();\n        });\n      });\n    } else {\n      // Service worker found. Proceed as normal.\n      registerValidSW(swUrl, config);\n    }\n  })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}